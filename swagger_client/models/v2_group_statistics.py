# coding: utf-8

"""
    语雀 OpenAPI

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class V2GroupStatistics(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'bizdate': 'str',
        'user_id': 'str',
        'organization_id': 'str',
        'member_count': 'str',
        'collaborator_count': 'str',
        'day_read_count': 'str',
        'day_write_count': 'str',
        'write_count': 'str',
        'read_count': 'str',
        'read_count_30': 'str',
        'read_count_365': 'str',
        'comment_count': 'str',
        'comment_count_30': 'str',
        'comment_count_365': 'str',
        'like_count': 'str',
        'like_count_30': 'str',
        'like_count_365': 'str',
        'follow_count': 'str',
        'collect_count': 'str',
        'doc_count': 'str',
        'sheet_count': 'str',
        'board_count': 'str',
        'show_count': 'str',
        'resource_count': 'str',
        'artboard_count': 'str',
        'attachment_count': 'str',
        'book_count': 'str',
        'public_book_count': 'str',
        'private_book_count': 'str',
        'book_book_count': 'str',
        'book_resource_count': 'str',
        'book_design_count': 'str',
        'book_thread_count': 'str',
        'data_usage': 'str',
        'grains_count': 'str',
        'grains_count_sum': 'str',
        'grains_count_consume': 'str',
        'interaction_people_count': 'str',
        'content_count': 'str',
        'collaboration_count': 'str',
        'working_hours': 'str',
        'baike': 'str',
        'table_count': 'str'
    }

    attribute_map = {
        'bizdate': 'bizdate',
        'user_id': 'user_id',
        'organization_id': 'organization_id',
        'member_count': 'member_count',
        'collaborator_count': 'collaborator_count',
        'day_read_count': 'day_read_count',
        'day_write_count': 'day_write_count',
        'write_count': 'write_count',
        'read_count': 'read_count',
        'read_count_30': 'read_count_30',
        'read_count_365': 'read_count_365',
        'comment_count': 'comment_count',
        'comment_count_30': 'comment_count_30',
        'comment_count_365': 'comment_count_365',
        'like_count': 'like_count',
        'like_count_30': 'like_count_30',
        'like_count_365': 'like_count_365',
        'follow_count': 'follow_count',
        'collect_count': 'collect_count',
        'doc_count': 'doc_count',
        'sheet_count': 'sheet_count',
        'board_count': 'board_count',
        'show_count': 'show_count',
        'resource_count': 'resource_count',
        'artboard_count': 'artboard_count',
        'attachment_count': 'attachment_count',
        'book_count': 'book_count',
        'public_book_count': 'public_book_count',
        'private_book_count': 'private_book_count',
        'book_book_count': 'book_book_count',
        'book_resource_count': 'book_resource_count',
        'book_design_count': 'book_design_count',
        'book_thread_count': 'book_thread_count',
        'data_usage': 'data_usage',
        'grains_count': 'grains_count',
        'grains_count_sum': 'grains_count_sum',
        'grains_count_consume': 'grains_count_consume',
        'interaction_people_count': 'interaction_people_count',
        'content_count': 'content_count',
        'collaboration_count': 'collaboration_count',
        'working_hours': 'working_hours',
        'baike': 'baike',
        'table_count': 'table_count'
    }

    def __init__(self, bizdate=None, user_id=None, organization_id=None, member_count=None, collaborator_count=None, day_read_count=None, day_write_count=None, write_count=None, read_count=None, read_count_30=None, read_count_365=None, comment_count=None, comment_count_30=None, comment_count_365=None, like_count=None, like_count_30=None, like_count_365=None, follow_count=None, collect_count=None, doc_count=None, sheet_count=None, board_count=None, show_count=None, resource_count=None, artboard_count=None, attachment_count=None, book_count=None, public_book_count=None, private_book_count=None, book_book_count=None, book_resource_count=None, book_design_count=None, book_thread_count=None, data_usage=None, grains_count=None, grains_count_sum=None, grains_count_consume=None, interaction_people_count=None, content_count=None, collaboration_count=None, working_hours=None, baike=None, table_count=None):  # noqa: E501
        """V2GroupStatistics - a model defined in Swagger"""  # noqa: E501
        self._bizdate = None
        self._user_id = None
        self._organization_id = None
        self._member_count = None
        self._collaborator_count = None
        self._day_read_count = None
        self._day_write_count = None
        self._write_count = None
        self._read_count = None
        self._read_count_30 = None
        self._read_count_365 = None
        self._comment_count = None
        self._comment_count_30 = None
        self._comment_count_365 = None
        self._like_count = None
        self._like_count_30 = None
        self._like_count_365 = None
        self._follow_count = None
        self._collect_count = None
        self._doc_count = None
        self._sheet_count = None
        self._board_count = None
        self._show_count = None
        self._resource_count = None
        self._artboard_count = None
        self._attachment_count = None
        self._book_count = None
        self._public_book_count = None
        self._private_book_count = None
        self._book_book_count = None
        self._book_resource_count = None
        self._book_design_count = None
        self._book_thread_count = None
        self._data_usage = None
        self._grains_count = None
        self._grains_count_sum = None
        self._grains_count_consume = None
        self._interaction_people_count = None
        self._content_count = None
        self._collaboration_count = None
        self._working_hours = None
        self._baike = None
        self._table_count = None
        self.discriminator = None
        if bizdate is not None:
            self.bizdate = bizdate
        if user_id is not None:
            self.user_id = user_id
        if organization_id is not None:
            self.organization_id = organization_id
        if member_count is not None:
            self.member_count = member_count
        if collaborator_count is not None:
            self.collaborator_count = collaborator_count
        if day_read_count is not None:
            self.day_read_count = day_read_count
        if day_write_count is not None:
            self.day_write_count = day_write_count
        if write_count is not None:
            self.write_count = write_count
        if read_count is not None:
            self.read_count = read_count
        if read_count_30 is not None:
            self.read_count_30 = read_count_30
        if read_count_365 is not None:
            self.read_count_365 = read_count_365
        if comment_count is not None:
            self.comment_count = comment_count
        if comment_count_30 is not None:
            self.comment_count_30 = comment_count_30
        if comment_count_365 is not None:
            self.comment_count_365 = comment_count_365
        if like_count is not None:
            self.like_count = like_count
        if like_count_30 is not None:
            self.like_count_30 = like_count_30
        if like_count_365 is not None:
            self.like_count_365 = like_count_365
        if follow_count is not None:
            self.follow_count = follow_count
        if collect_count is not None:
            self.collect_count = collect_count
        if doc_count is not None:
            self.doc_count = doc_count
        if sheet_count is not None:
            self.sheet_count = sheet_count
        if board_count is not None:
            self.board_count = board_count
        if show_count is not None:
            self.show_count = show_count
        if resource_count is not None:
            self.resource_count = resource_count
        if artboard_count is not None:
            self.artboard_count = artboard_count
        if attachment_count is not None:
            self.attachment_count = attachment_count
        if book_count is not None:
            self.book_count = book_count
        if public_book_count is not None:
            self.public_book_count = public_book_count
        if private_book_count is not None:
            self.private_book_count = private_book_count
        if book_book_count is not None:
            self.book_book_count = book_book_count
        if book_resource_count is not None:
            self.book_resource_count = book_resource_count
        if book_design_count is not None:
            self.book_design_count = book_design_count
        if book_thread_count is not None:
            self.book_thread_count = book_thread_count
        if data_usage is not None:
            self.data_usage = data_usage
        if grains_count is not None:
            self.grains_count = grains_count
        if grains_count_sum is not None:
            self.grains_count_sum = grains_count_sum
        if grains_count_consume is not None:
            self.grains_count_consume = grains_count_consume
        if interaction_people_count is not None:
            self.interaction_people_count = interaction_people_count
        if content_count is not None:
            self.content_count = content_count
        if collaboration_count is not None:
            self.collaboration_count = collaboration_count
        if working_hours is not None:
            self.working_hours = working_hours
        if baike is not None:
            self.baike = baike
        if table_count is not None:
            self.table_count = table_count

    @property
    def bizdate(self):
        """Gets the bizdate of this V2GroupStatistics.  # noqa: E501


        :return: The bizdate of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._bizdate

    @bizdate.setter
    def bizdate(self, bizdate):
        """Sets the bizdate of this V2GroupStatistics.


        :param bizdate: The bizdate of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._bizdate = bizdate

    @property
    def user_id(self):
        """Gets the user_id of this V2GroupStatistics.  # noqa: E501

        统计日期 (YYYYMMDD)  # noqa: E501

        :return: The user_id of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this V2GroupStatistics.

        统计日期 (YYYYMMDD)  # noqa: E501

        :param user_id: The user_id of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._user_id = user_id

    @property
    def organization_id(self):
        """Gets the organization_id of this V2GroupStatistics.  # noqa: E501

        团队 ID  # noqa: E501

        :return: The organization_id of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._organization_id

    @organization_id.setter
    def organization_id(self, organization_id):
        """Sets the organization_id of this V2GroupStatistics.

        团队 ID  # noqa: E501

        :param organization_id: The organization_id of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._organization_id = organization_id

    @property
    def member_count(self):
        """Gets the member_count of this V2GroupStatistics.  # noqa: E501

        归属空间 ID  # noqa: E501

        :return: The member_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._member_count

    @member_count.setter
    def member_count(self, member_count):
        """Sets the member_count of this V2GroupStatistics.

        归属空间 ID  # noqa: E501

        :param member_count: The member_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._member_count = member_count

    @property
    def collaborator_count(self):
        """Gets the collaborator_count of this V2GroupStatistics.  # noqa: E501

        成员数  # noqa: E501

        :return: The collaborator_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._collaborator_count

    @collaborator_count.setter
    def collaborator_count(self, collaborator_count):
        """Sets the collaborator_count of this V2GroupStatistics.

        成员数  # noqa: E501

        :param collaborator_count: The collaborator_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._collaborator_count = collaborator_count

    @property
    def day_read_count(self):
        """Gets the day_read_count of this V2GroupStatistics.  # noqa: E501

        协作者数  # noqa: E501

        :return: The day_read_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._day_read_count

    @day_read_count.setter
    def day_read_count(self, day_read_count):
        """Sets the day_read_count of this V2GroupStatistics.

        协作者数  # noqa: E501

        :param day_read_count: The day_read_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._day_read_count = day_read_count

    @property
    def day_write_count(self):
        """Gets the day_write_count of this V2GroupStatistics.  # noqa: E501

        当日阅读量  # noqa: E501

        :return: The day_write_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._day_write_count

    @day_write_count.setter
    def day_write_count(self, day_write_count):
        """Sets the day_write_count of this V2GroupStatistics.

        当日阅读量  # noqa: E501

        :param day_write_count: The day_write_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._day_write_count = day_write_count

    @property
    def write_count(self):
        """Gets the write_count of this V2GroupStatistics.  # noqa: E501

        当日编辑次数  # noqa: E501

        :return: The write_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._write_count

    @write_count.setter
    def write_count(self, write_count):
        """Sets the write_count of this V2GroupStatistics.

        当日编辑次数  # noqa: E501

        :param write_count: The write_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._write_count = write_count

    @property
    def read_count(self):
        """Gets the read_count of this V2GroupStatistics.  # noqa: E501

        编辑次数  # noqa: E501

        :return: The read_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._read_count

    @read_count.setter
    def read_count(self, read_count):
        """Sets the read_count of this V2GroupStatistics.

        编辑次数  # noqa: E501

        :param read_count: The read_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._read_count = read_count

    @property
    def read_count_30(self):
        """Gets the read_count_30 of this V2GroupStatistics.  # noqa: E501

        阅读量  # noqa: E501

        :return: The read_count_30 of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._read_count_30

    @read_count_30.setter
    def read_count_30(self, read_count_30):
        """Sets the read_count_30 of this V2GroupStatistics.

        阅读量  # noqa: E501

        :param read_count_30: The read_count_30 of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._read_count_30 = read_count_30

    @property
    def read_count_365(self):
        """Gets the read_count_365 of this V2GroupStatistics.  # noqa: E501

        阅读量 (30天)  # noqa: E501

        :return: The read_count_365 of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._read_count_365

    @read_count_365.setter
    def read_count_365(self, read_count_365):
        """Sets the read_count_365 of this V2GroupStatistics.

        阅读量 (30天)  # noqa: E501

        :param read_count_365: The read_count_365 of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._read_count_365 = read_count_365

    @property
    def comment_count(self):
        """Gets the comment_count of this V2GroupStatistics.  # noqa: E501

        阅读量 (一年)  # noqa: E501

        :return: The comment_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._comment_count

    @comment_count.setter
    def comment_count(self, comment_count):
        """Sets the comment_count of this V2GroupStatistics.

        阅读量 (一年)  # noqa: E501

        :param comment_count: The comment_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._comment_count = comment_count

    @property
    def comment_count_30(self):
        """Gets the comment_count_30 of this V2GroupStatistics.  # noqa: E501

        评论量  # noqa: E501

        :return: The comment_count_30 of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._comment_count_30

    @comment_count_30.setter
    def comment_count_30(self, comment_count_30):
        """Sets the comment_count_30 of this V2GroupStatistics.

        评论量  # noqa: E501

        :param comment_count_30: The comment_count_30 of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._comment_count_30 = comment_count_30

    @property
    def comment_count_365(self):
        """Gets the comment_count_365 of this V2GroupStatistics.  # noqa: E501

        评论量 (30天)  # noqa: E501

        :return: The comment_count_365 of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._comment_count_365

    @comment_count_365.setter
    def comment_count_365(self, comment_count_365):
        """Sets the comment_count_365 of this V2GroupStatistics.

        评论量 (30天)  # noqa: E501

        :param comment_count_365: The comment_count_365 of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._comment_count_365 = comment_count_365

    @property
    def like_count(self):
        """Gets the like_count of this V2GroupStatistics.  # noqa: E501

        评论量 (一年)  # noqa: E501

        :return: The like_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._like_count

    @like_count.setter
    def like_count(self, like_count):
        """Sets the like_count of this V2GroupStatistics.

        评论量 (一年)  # noqa: E501

        :param like_count: The like_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._like_count = like_count

    @property
    def like_count_30(self):
        """Gets the like_count_30 of this V2GroupStatistics.  # noqa: E501

        点赞量  # noqa: E501

        :return: The like_count_30 of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._like_count_30

    @like_count_30.setter
    def like_count_30(self, like_count_30):
        """Sets the like_count_30 of this V2GroupStatistics.

        点赞量  # noqa: E501

        :param like_count_30: The like_count_30 of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._like_count_30 = like_count_30

    @property
    def like_count_365(self):
        """Gets the like_count_365 of this V2GroupStatistics.  # noqa: E501

        点赞量 (30天)  # noqa: E501

        :return: The like_count_365 of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._like_count_365

    @like_count_365.setter
    def like_count_365(self, like_count_365):
        """Sets the like_count_365 of this V2GroupStatistics.

        点赞量 (30天)  # noqa: E501

        :param like_count_365: The like_count_365 of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._like_count_365 = like_count_365

    @property
    def follow_count(self):
        """Gets the follow_count of this V2GroupStatistics.  # noqa: E501

        点赞量 (一年)  # noqa: E501

        :return: The follow_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._follow_count

    @follow_count.setter
    def follow_count(self, follow_count):
        """Sets the follow_count of this V2GroupStatistics.

        点赞量 (一年)  # noqa: E501

        :param follow_count: The follow_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._follow_count = follow_count

    @property
    def collect_count(self):
        """Gets the collect_count of this V2GroupStatistics.  # noqa: E501

        关注量  # noqa: E501

        :return: The collect_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._collect_count

    @collect_count.setter
    def collect_count(self, collect_count):
        """Sets the collect_count of this V2GroupStatistics.

        关注量  # noqa: E501

        :param collect_count: The collect_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._collect_count = collect_count

    @property
    def doc_count(self):
        """Gets the doc_count of this V2GroupStatistics.  # noqa: E501

        收藏量  # noqa: E501

        :return: The doc_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._doc_count

    @doc_count.setter
    def doc_count(self, doc_count):
        """Sets the doc_count of this V2GroupStatistics.

        收藏量  # noqa: E501

        :param doc_count: The doc_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._doc_count = doc_count

    @property
    def sheet_count(self):
        """Gets the sheet_count of this V2GroupStatistics.  # noqa: E501

        文档数量  # noqa: E501

        :return: The sheet_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._sheet_count

    @sheet_count.setter
    def sheet_count(self, sheet_count):
        """Sets the sheet_count of this V2GroupStatistics.

        文档数量  # noqa: E501

        :param sheet_count: The sheet_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._sheet_count = sheet_count

    @property
    def board_count(self):
        """Gets the board_count of this V2GroupStatistics.  # noqa: E501

        表格数量  # noqa: E501

        :return: The board_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._board_count

    @board_count.setter
    def board_count(self, board_count):
        """Sets the board_count of this V2GroupStatistics.

        表格数量  # noqa: E501

        :param board_count: The board_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._board_count = board_count

    @property
    def show_count(self):
        """Gets the show_count of this V2GroupStatistics.  # noqa: E501

        画板数量  # noqa: E501

        :return: The show_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._show_count

    @show_count.setter
    def show_count(self, show_count):
        """Sets the show_count of this V2GroupStatistics.

        画板数量  # noqa: E501

        :param show_count: The show_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._show_count = show_count

    @property
    def resource_count(self):
        """Gets the resource_count of this V2GroupStatistics.  # noqa: E501

        演示文稿数量  # noqa: E501

        :return: The resource_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._resource_count

    @resource_count.setter
    def resource_count(self, resource_count):
        """Sets the resource_count of this V2GroupStatistics.

        演示文稿数量  # noqa: E501

        :param resource_count: The resource_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._resource_count = resource_count

    @property
    def artboard_count(self):
        """Gets the artboard_count of this V2GroupStatistics.  # noqa: E501

        资源数量  # noqa: E501

        :return: The artboard_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._artboard_count

    @artboard_count.setter
    def artboard_count(self, artboard_count):
        """Sets the artboard_count of this V2GroupStatistics.

        资源数量  # noqa: E501

        :param artboard_count: The artboard_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._artboard_count = artboard_count

    @property
    def attachment_count(self):
        """Gets the attachment_count of this V2GroupStatistics.  # noqa: E501

        图集数量  # noqa: E501

        :return: The attachment_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._attachment_count

    @attachment_count.setter
    def attachment_count(self, attachment_count):
        """Sets the attachment_count of this V2GroupStatistics.

        图集数量  # noqa: E501

        :param attachment_count: The attachment_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._attachment_count = attachment_count

    @property
    def book_count(self):
        """Gets the book_count of this V2GroupStatistics.  # noqa: E501

        附件数量  # noqa: E501

        :return: The book_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._book_count

    @book_count.setter
    def book_count(self, book_count):
        """Sets the book_count of this V2GroupStatistics.

        附件数量  # noqa: E501

        :param book_count: The book_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._book_count = book_count

    @property
    def public_book_count(self):
        """Gets the public_book_count of this V2GroupStatistics.  # noqa: E501

        知识库总数量  # noqa: E501

        :return: The public_book_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._public_book_count

    @public_book_count.setter
    def public_book_count(self, public_book_count):
        """Sets the public_book_count of this V2GroupStatistics.

        知识库总数量  # noqa: E501

        :param public_book_count: The public_book_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._public_book_count = public_book_count

    @property
    def private_book_count(self):
        """Gets the private_book_count of this V2GroupStatistics.  # noqa: E501

        公开知识库数量  # noqa: E501

        :return: The private_book_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._private_book_count

    @private_book_count.setter
    def private_book_count(self, private_book_count):
        """Sets the private_book_count of this V2GroupStatistics.

        公开知识库数量  # noqa: E501

        :param private_book_count: The private_book_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._private_book_count = private_book_count

    @property
    def book_book_count(self):
        """Gets the book_book_count of this V2GroupStatistics.  # noqa: E501

        私密知识库数量  # noqa: E501

        :return: The book_book_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._book_book_count

    @book_book_count.setter
    def book_book_count(self, book_book_count):
        """Sets the book_book_count of this V2GroupStatistics.

        私密知识库数量  # noqa: E501

        :param book_book_count: The book_book_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._book_book_count = book_book_count

    @property
    def book_resource_count(self):
        """Gets the book_resource_count of this V2GroupStatistics.  # noqa: E501

        文档知识库数量  # noqa: E501

        :return: The book_resource_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._book_resource_count

    @book_resource_count.setter
    def book_resource_count(self, book_resource_count):
        """Sets the book_resource_count of this V2GroupStatistics.

        文档知识库数量  # noqa: E501

        :param book_resource_count: The book_resource_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._book_resource_count = book_resource_count

    @property
    def book_design_count(self):
        """Gets the book_design_count of this V2GroupStatistics.  # noqa: E501

        资源知识库数量  # noqa: E501

        :return: The book_design_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._book_design_count

    @book_design_count.setter
    def book_design_count(self, book_design_count):
        """Sets the book_design_count of this V2GroupStatistics.

        资源知识库数量  # noqa: E501

        :param book_design_count: The book_design_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._book_design_count = book_design_count

    @property
    def book_thread_count(self):
        """Gets the book_thread_count of this V2GroupStatistics.  # noqa: E501

        图片知识库数量  # noqa: E501

        :return: The book_thread_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._book_thread_count

    @book_thread_count.setter
    def book_thread_count(self, book_thread_count):
        """Sets the book_thread_count of this V2GroupStatistics.

        图片知识库数量  # noqa: E501

        :param book_thread_count: The book_thread_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._book_thread_count = book_thread_count

    @property
    def data_usage(self):
        """Gets the data_usage of this V2GroupStatistics.  # noqa: E501

        话题知识库数量  # noqa: E501

        :return: The data_usage of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._data_usage

    @data_usage.setter
    def data_usage(self, data_usage):
        """Sets the data_usage of this V2GroupStatistics.

        话题知识库数量  # noqa: E501

        :param data_usage: The data_usage of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._data_usage = data_usage

    @property
    def grains_count(self):
        """Gets the grains_count of this V2GroupStatistics.  # noqa: E501

        流量使用量  # noqa: E501

        :return: The grains_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._grains_count

    @grains_count.setter
    def grains_count(self, grains_count):
        """Sets the grains_count of this V2GroupStatistics.

        流量使用量  # noqa: E501

        :param grains_count: The grains_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._grains_count = grains_count

    @property
    def grains_count_sum(self):
        """Gets the grains_count_sum of this V2GroupStatistics.  # noqa: E501

        当前稻谷数  # noqa: E501

        :return: The grains_count_sum of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._grains_count_sum

    @grains_count_sum.setter
    def grains_count_sum(self, grains_count_sum):
        """Sets the grains_count_sum of this V2GroupStatistics.

        当前稻谷数  # noqa: E501

        :param grains_count_sum: The grains_count_sum of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._grains_count_sum = grains_count_sum

    @property
    def grains_count_consume(self):
        """Gets the grains_count_consume of this V2GroupStatistics.  # noqa: E501

        累计获得稻谷数  # noqa: E501

        :return: The grains_count_consume of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._grains_count_consume

    @grains_count_consume.setter
    def grains_count_consume(self, grains_count_consume):
        """Sets the grains_count_consume of this V2GroupStatistics.

        累计获得稻谷数  # noqa: E501

        :param grains_count_consume: The grains_count_consume of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._grains_count_consume = grains_count_consume

    @property
    def interaction_people_count(self):
        """Gets the interaction_people_count of this V2GroupStatistics.  # noqa: E501

        已消耗稻谷数  # noqa: E501

        :return: The interaction_people_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._interaction_people_count

    @interaction_people_count.setter
    def interaction_people_count(self, interaction_people_count):
        """Sets the interaction_people_count of this V2GroupStatistics.

        已消耗稻谷数  # noqa: E501

        :param interaction_people_count: The interaction_people_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._interaction_people_count = interaction_people_count

    @property
    def content_count(self):
        """Gets the content_count of this V2GroupStatistics.  # noqa: E501

        知识交流人数  # noqa: E501

        :return: The content_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._content_count

    @content_count.setter
    def content_count(self, content_count):
        """Sets the content_count of this V2GroupStatistics.

        知识交流人数  # noqa: E501

        :param content_count: The content_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._content_count = content_count

    @property
    def collaboration_count(self):
        """Gets the collaboration_count of this V2GroupStatistics.  # noqa: E501

        知识财富数  # noqa: E501

        :return: The collaboration_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._collaboration_count

    @collaboration_count.setter
    def collaboration_count(self, collaboration_count):
        """Sets the collaboration_count of this V2GroupStatistics.

        知识财富数  # noqa: E501

        :param collaboration_count: The collaboration_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._collaboration_count = collaboration_count

    @property
    def working_hours(self):
        """Gets the working_hours of this V2GroupStatistics.  # noqa: E501

        知识协同次数  # noqa: E501

        :return: The working_hours of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._working_hours

    @working_hours.setter
    def working_hours(self, working_hours):
        """Sets the working_hours of this V2GroupStatistics.

        知识协同次数  # noqa: E501

        :param working_hours: The working_hours of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._working_hours = working_hours

    @property
    def baike(self):
        """Gets the baike of this V2GroupStatistics.  # noqa: E501

        协同提效时长 (小时)  # noqa: E501

        :return: The baike of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._baike

    @baike.setter
    def baike(self, baike):
        """Sets the baike of this V2GroupStatistics.

        协同提效时长 (小时)  # noqa: E501

        :param baike: The baike of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._baike = baike

    @property
    def table_count(self):
        """Gets the table_count of this V2GroupStatistics.  # noqa: E501

        百科全书卷数  # noqa: E501

        :return: The table_count of this V2GroupStatistics.  # noqa: E501
        :rtype: str
        """
        return self._table_count

    @table_count.setter
    def table_count(self, table_count):
        """Sets the table_count of this V2GroupStatistics.

        百科全书卷数  # noqa: E501

        :param table_count: The table_count of this V2GroupStatistics.  # noqa: E501
        :type: str
        """

        self._table_count = table_count

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(V2GroupStatistics, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, V2GroupStatistics):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
